{{#queryTypes}}
{{#methods.length}}
use crate::{
    {{#methods}}
    {{#toLower}}{{name}}{{/toLower}}_wrapped{{^last}},{{/last}}
    {{/methods}}
};
{{/methods.length}}
{{/queryTypes}}
use polywrap_wasm_rs::{
    abort,
    invoke,
    InvokeArgs
};

{{#__commonModule}}
{{#__commonPath}}
// mutation_w3_invoke
{{/__commonPath}}
{{^__commonPath}}
#[cfg(feature = "w3invoke")]
{{/__commonPath}}
{{/__commonModule}}
#[no_mangle]
pub fn _w3_invoke(method_size: u32, args_size: u32) -> bool {

    // Ensure the abort handler is properly setup
    abort::w3_abort_setup();

    let args: InvokeArgs = invoke::w3_invoke_args(method_size, args_size);

    match args.method.as_str() {
        {{#queryTypes}}
        {{#methods}}
        "{{name}}" => invoke::w3_invoke(args, Some({{#toLower}}{{name}}{{/toLower}}_wrapped)),
        {{/methods}}
        {{/queryTypes}}
        _ => invoke::w3_invoke(args, None),
    }
}
