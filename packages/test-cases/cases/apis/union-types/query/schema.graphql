type ArgUnionA {
  prop: String!
}

type ArgUnionB {
  prop: Boolean!
}

type ArgUnionC {
  foo: String!
}

type ArgUnionD {
  bar: String!
}

union ArgUnion = ArgUnionA | ArgUnionB

type TypeUnionA {
  propA: Int!
}

type TypeUnionB {
  propB: Boolean!
}

union TypeUnion = TypeUnionA | TypeUnionB

union TripleUnion = ArgUnionA | ArgUnionB | ArgUnionC

type Query {
  argMethod(
    arg: ArgUnion!
  ): String!

  returnMethod(
    arg: Boolean!
  ): TypeUnion!

  arrayMethod(
    arg: [TripleUnion!]!
  ): [Int!]!

  optionalMethod(arg: ArgUnion): [TypeUnion!] 
}
